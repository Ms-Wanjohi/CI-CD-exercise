version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3

# Roll back command
# commands:
#   destroy_environment:
#     steps:
#       - run:
#           name: destroy_environment
#           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
#           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
#           when: on_fail
#           command: |
#             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
# # Define the jobs we want to run for this project
jobs:
#   create_infrastructure: 
#       docker:
#         - image: amazon/aws-cli
#       steps:
#         - checkout
#         - run:
#             name: Create Cloudformation Stack
#             command: |
#               aws cloudformation deploy \
#                 --template-file cicd_exercise.yml \
#                 --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
#                 --region us-east-1
#   configure_infrastructure: 
#     docker:
#       - image: python:3.7-alpine3.11
#     steps:
#       - checkout
#       - add_ssh_keys:
#           fingerprints: ["34:9d:bc:89:db:57:42:23:39:59:f6:e1:98:c1:71:87"] # You can get this ID in the section where you registered the SSH Key
#       - run:
#           name: Install dependencies
#           command: |
#             # install the dependencies needed for your playbook
#             apk add --update ansible 
#       - run:
#           name: Configure server
#           command: |
#             ansible-playbook -i inventory.txt main-remote.yml
#   smoke_test:
#     docker:
#       - image: python:3.7-alpine3.11
#     steps:
#       - run: apk add --update curl
#       - run: pip install awscli
#       - run:
#           name: smoke test
#           command: |
#             URL="https://blog.udacity.commm/"
            
#             if curl -s --head ${URL} 
#             then
#               return 0
#             else
#               return 1
#             fi
#       - destroy_environment
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Execute bucket.yml - Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:7} \
            --parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"
      # Uncomment the step below if yoou wish to upload all contents of the current directory to the S3 bucket
      - run: aws s3 sync . s3://mybucket-${CIRCLE_WORKFLOW_ID:0:7} --delete
# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - create_and_deploy_front_end
      # - create_infrastructure
      # - configure_infrastructure
      # - smoke_test